version: 'test{build}'

# Test against this version of Node.js
environment:
  matrix:
    - nodejs_version: "0.10"
    - nodejs_version: "0.11"
    - nodejs_version: "0.12"
    - nodejs_version: "4"
    - nodejs_version: "6"

platform:
  - x86
  - x64

clone_folder: c:\projects\%APPVEYOR_PROJECT_NAME%
# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version $env:platform
  # install modules
  - npm install

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - echo %cd%
  - node --version
  - npm --version
  # run tests
  - npm test

# Don't actually build.
#build: off

before_build:
- ps: >-
    Invoke-WebRequest "https://github.com/MSOpenTech/redis/releases/download/win-2.8.17.4/redis-2.8.17.zip" -OutFile .\redis-2.8.17.zip;
    $destFolder = "redis-2.8.17";
    $shell = new-object -com shell.application;

    $zip = $shell.NameSpace("$pwd\redis-2.8.17.zip");
    if (Test-Path $pwd\$destFolder )
    {
        del $pwd\$destFolder -Force -Recurse
    }
    md ".\redis-2.8.17";

    foreach($item in $zip.items())
    {
        $shell.Namespace("$pwd\redis-2.8.17").copyhere($item);
    it kind of worked

    cd $destFolder
    .\redis-server.exe --service-install
    .\redis-server.exe --service-start
    cd ..
- nuget restore Hangfire.Redis.StackExchange.sln
build:
  publish_nuget: true
  publish_nuget_symbols: true
  verbosity: minimal
